// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

#nullable disable

namespace FridgeMicroservice.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221003150151_FridgeDb")]
    partial class FridgeDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Fridges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2268d68-d201-4d29-867d-e35e79cf6a1c"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3866),
                            Manufacturer = "LG",
                            ModelId = new Guid("80771113-d807-4dde-aa15-6c9320038da2"),
                            OwnerName = "Alex",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6b4aa808-48fc-4a63-aa81-aab2df7efea8"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3869),
                            Manufacturer = "Samsung",
                            ModelId = new Guid("633d9ada-fbf8-410a-98a3-d2d15a09a5fa"),
                            OwnerName = "Martin",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("84b45896-d651-42d6-b96e-aa38772e2ef6"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3870),
                            Manufacturer = "Atlant",
                            ModelId = new Guid("633d9ada-fbf8-410a-98a3-d2d15a09a5fa"),
                            OwnerName = "Espio",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Repositories.Entities.FridgeProductEntity", b =>
                {
                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("FridgeId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("FridgeProduct", (string)null);
                });

            modelBuilder.Entity("Repositories.Entities.ModelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80771113-d807-4dde-aa15-6c9320038da2"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3932),
                            Name = "RT-700",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = new Guid("633d9ada-fbf8-410a-98a3-d2d15a09a5fa"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3934),
                            Name = "HG50",
                            ProductionYear = 2010
                        });
                });

            modelBuilder.Entity("Repositories.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88fdc2fa-09ba-47d4-a9fb-d33099c97929"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3958),
                            LinkImage = "https://craves.everybodyshops.com/wp-content/uploads/ThinkstockPhotos-535489242-1024x683@2x.jpg",
                            Name = "Milk"
                        },
                        new
                        {
                            Id = new Guid("bfe35d1f-5d6a-4d22-b722-635a9f361738"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3959),
                            LinkImage = "https://www.expatica.com/app/uploads/sites/2/2014/05/bread.jpg",
                            Name = "Bread"
                        },
                        new
                        {
                            Id = new Guid("2ac12399-0105-4b96-887a-86d851e23fd2"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3962),
                            LinkImage = "https://images5.alphacoders.com/102/1022723.jpg",
                            Name = "Juice"
                        },
                        new
                        {
                            Id = new Guid("41d3107d-b978-4475-98fc-216dbc89fc1a"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3963),
                            LinkImage = "https://pm1.narvii.com/6810/05dbd7aaebf3454313b99edfd566b06356a59be3v2_hq.jpg",
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = new Guid("0b4cebcc-18af-4bd5-b4b2-5a410154866c"),
                            CreatedDate = new DateTime(2022, 10, 3, 15, 1, 48, 634, DateTimeKind.Utc).AddTicks(3964),
                            LinkImage = "https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/218648/eggs-brown-getty_BSCxkDW.jpg&w=2000&op=resize",
                            Name = "Egg"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.HasOne("Repositories.Entities.ModelEntity", "Model")
                        .WithMany("Fridges")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Repositories.Entities.FridgeProductEntity", b =>
                {
                    b.HasOne("Repositories.Entities.FridgeEntity", "Fridge")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Entities.ProductEntity", "Product")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.Navigation("FridgeProducts");
                });

            modelBuilder.Entity("Repositories.Entities.ModelEntity", b =>
                {
                    b.Navigation("Fridges");
                });

            modelBuilder.Entity("Repositories.Entities.ProductEntity", b =>
                {
                    b.Navigation("FridgeProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
