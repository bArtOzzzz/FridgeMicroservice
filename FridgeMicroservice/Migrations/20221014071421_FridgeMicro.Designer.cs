// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

#nullable disable

namespace FridgeMicroservice.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221014071421_FridgeMicro")]
    partial class FridgeMicro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Fridges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23f740ee-0b12-4801-b7e4-e4d6d9944e58"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1622),
                            Manufacturer = "LG",
                            ModelId = new Guid("f539773d-17a6-42fe-be14-f6c44b00b447"),
                            OwnerName = "Alex",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("371c4696-dbb8-4238-ac71-4be945f56993"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1624),
                            Manufacturer = "Samsung",
                            ModelId = new Guid("4aaec8d1-ae2e-44a3-a5e0-4bbeebebfe76"),
                            OwnerName = "Martin",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("a70797f7-6d0f-45db-847d-55ebe82dc049"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1625),
                            Manufacturer = "Atlant",
                            ModelId = new Guid("4aaec8d1-ae2e-44a3-a5e0-4bbeebebfe76"),
                            OwnerName = "Espio",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Repositories.Entities.FridgeProductEntity", b =>
                {
                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("FridgeId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("FridgeProduct", (string)null);
                });

            modelBuilder.Entity("Repositories.Entities.ModelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f539773d-17a6-42fe-be14-f6c44b00b447"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1682),
                            Name = "RT-700",
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = new Guid("4aaec8d1-ae2e-44a3-a5e0-4bbeebebfe76"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1683),
                            Name = "HG50",
                            ProductionYear = 2010
                        });
                });

            modelBuilder.Entity("Repositories.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("311c92af-ef71-43e7-a060-669c648a7e04"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1701),
                            LinkImage = "https://craves.everybodyshops.com/wp-content/uploads/ThinkstockPhotos-535489242-1024x683@2x.jpg",
                            Name = "Milk"
                        },
                        new
                        {
                            Id = new Guid("55999c85-cc72-4eff-88a2-3756885cd0e5"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1702),
                            LinkImage = "https://www.expatica.com/app/uploads/sites/2/2014/05/bread.jpg",
                            Name = "Bread"
                        },
                        new
                        {
                            Id = new Guid("b12e1773-2148-4727-b9aa-0e54a27d358d"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1703),
                            LinkImage = "https://images5.alphacoders.com/102/1022723.jpg",
                            Name = "Juice"
                        },
                        new
                        {
                            Id = new Guid("9cc94f48-214b-4305-b954-422fbfca7fb4"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1704),
                            LinkImage = "https://pm1.narvii.com/6810/05dbd7aaebf3454313b99edfd566b06356a59be3v2_hq.jpg",
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = new Guid("ef002825-d377-4c0b-9bbe-e4d15ca5f7e1"),
                            CreatedDate = new DateTime(2022, 10, 14, 7, 14, 18, 263, DateTimeKind.Utc).AddTicks(1705),
                            LinkImage = "https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/218648/eggs-brown-getty_BSCxkDW.jpg&w=2000&op=resize",
                            Name = "Egg"
                        });
                });

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.HasOne("Repositories.Entities.ModelEntity", "Model")
                        .WithMany("Fridges")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Repositories.Entities.FridgeProductEntity", b =>
                {
                    b.HasOne("Repositories.Entities.FridgeEntity", "Fridge")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Entities.ProductEntity", "Product")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.Navigation("FridgeProducts");
                });

            modelBuilder.Entity("Repositories.Entities.ModelEntity", b =>
                {
                    b.Navigation("Fridges");
                });

            modelBuilder.Entity("Repositories.Entities.ProductEntity", b =>
                {
                    b.Navigation("FridgeProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
