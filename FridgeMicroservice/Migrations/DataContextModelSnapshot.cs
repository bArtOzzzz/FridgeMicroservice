// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Context;

#nullable disable

namespace FridgeMicroservice.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("Fridges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c1e20d7-9cb4-43fa-a0c6-d4c433c0871d"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3587),
                            Manufacturer = "LG",
                            ModelId = new Guid("155d3afc-575d-4360-905e-3dbcc5710589"),
                            OwnerName = "Alex",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("981d0ee4-837b-4d5d-ba77-d9acf6f7d12a"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3588),
                            Manufacturer = "Samsung",
                            ModelId = new Guid("f4b65cbd-d0c6-4754-a973-cec4994a006d"),
                            OwnerName = "Martin",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f9ae681c-861d-4cea-8d9a-d197d8e9f0f4"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3590),
                            Manufacturer = "Atlant",
                            ModelId = new Guid("f4b65cbd-d0c6-4754-a973-cec4994a006d"),
                            OwnerName = "Espio",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Repositories.Entities.FridgeProductEntity", b =>
                {
                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FridgeId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("FridgeProduct", (string)null);

                    b.HasData(
                        new
                        {
                            FridgeId = new Guid("7c1e20d7-9cb4-43fa-a0c6-d4c433c0871d"),
                            ProductId = new Guid("997d3739-f810-48a2-9363-d5bcddde1a10"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3687),
                            Id = new Guid("9964863e-0fcd-4a06-86d5-c9cef628966b"),
                            ProductCount = 100,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FridgeId = new Guid("7c1e20d7-9cb4-43fa-a0c6-d4c433c0871d"),
                            ProductId = new Guid("37ad541b-d101-46e6-89cf-07fe2848f3fa"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3694),
                            Id = new Guid("7c30ab4f-787a-442d-82cd-d798cbd05e95"),
                            ProductCount = 100,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FridgeId = new Guid("981d0ee4-837b-4d5d-ba77-d9acf6f7d12a"),
                            ProductId = new Guid("438167bf-46cf-47b1-8ca8-307ff3299063"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3699),
                            Id = new Guid("51d360f2-4f78-4843-9a17-f9cd9672ce9b"),
                            ProductCount = 30,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FridgeId = new Guid("981d0ee4-837b-4d5d-ba77-d9acf6f7d12a"),
                            ProductId = new Guid("a6bea552-82df-4bd6-b372-df456969e59a"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3705),
                            Id = new Guid("33257432-4fae-4090-853e-00e0d52222e1"),
                            ProductCount = 123,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FridgeId = new Guid("f9ae681c-861d-4cea-8d9a-d197d8e9f0f4"),
                            ProductId = new Guid("997d3739-f810-48a2-9363-d5bcddde1a10"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3715),
                            Id = new Guid("49faef6a-52e5-4d92-a25c-d84542188b8a"),
                            ProductCount = 23,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FridgeId = new Guid("f9ae681c-861d-4cea-8d9a-d197d8e9f0f4"),
                            ProductId = new Guid("bba48c53-6c71-4924-98f1-f710d9baecf5"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3722),
                            Id = new Guid("09ba8519-4010-4db5-8d7d-cca6bcd7cae9"),
                            ProductCount = 454,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FridgeId = new Guid("f9ae681c-861d-4cea-8d9a-d197d8e9f0f4"),
                            ProductId = new Guid("438167bf-46cf-47b1-8ca8-307ff3299063"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3767),
                            Id = new Guid("32912f07-0a96-4205-9422-537c2048fc0f"),
                            ProductCount = 10,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Repositories.Entities.ModelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("155d3afc-575d-4360-905e-3dbcc5710589"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3648),
                            Name = "RT-700",
                            ProductionYear = 2019,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f4b65cbd-d0c6-4754-a973-cec4994a006d"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3650),
                            Name = "HG50",
                            ProductionYear = 2010,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Repositories.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("997d3739-f810-48a2-9363-d5bcddde1a10"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3658),
                            LinkImage = "https://craves.everybodyshops.com/wp-content/uploads/ThinkstockPhotos-535489242-1024x683@2x.jpg",
                            Name = "Milk",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bba48c53-6c71-4924-98f1-f710d9baecf5"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3658),
                            LinkImage = "https://www.expatica.com/app/uploads/sites/2/2014/05/bread.jpg",
                            Name = "Bread",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a6bea552-82df-4bd6-b372-df456969e59a"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3659),
                            LinkImage = "https://images5.alphacoders.com/102/1022723.jpg",
                            Name = "Juice",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("37ad541b-d101-46e6-89cf-07fe2848f3fa"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3661),
                            LinkImage = "https://pm1.narvii.com/6810/05dbd7aaebf3454313b99edfd566b06356a59be3v2_hq.jpg",
                            Name = "Cheese",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("438167bf-46cf-47b1-8ca8-307ff3299063"),
                            CreatedDate = new DateTime(2022, 12, 16, 13, 57, 37, 340, DateTimeKind.Utc).AddTicks(3662),
                            LinkImage = "https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/218648/eggs-brown-getty_BSCxkDW.jpg&w=2000&op=resize",
                            Name = "Egg",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.HasOne("Repositories.Entities.ModelEntity", "Model")
                        .WithMany("Fridges")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Repositories.Entities.FridgeProductEntity", b =>
                {
                    b.HasOne("Repositories.Entities.FridgeEntity", "Fridge")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Entities.ProductEntity", "Product")
                        .WithMany("FridgeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Repositories.Entities.FridgeEntity", b =>
                {
                    b.Navigation("FridgeProducts");
                });

            modelBuilder.Entity("Repositories.Entities.ModelEntity", b =>
                {
                    b.Navigation("Fridges");
                });

            modelBuilder.Entity("Repositories.Entities.ProductEntity", b =>
                {
                    b.Navigation("FridgeProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
